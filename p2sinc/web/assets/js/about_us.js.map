{"version":3,"names":[],"mappings":"","sources":["about_us.js"],"sourcesContent":["import {makeCarousel} from './components/carousel-max.js';\nimport {makeSideNav} from './components/nav_side.js';\n\n\nmakeSideNav();\n\nconst splide_1 = {\n  className: 'splide_about-us_1',\n}\n\n// creation splide type-2\ndocument.addEventListener( 'DOMContentLoaded', function() {\n  var splideAboutUs_1 = new Splide(`#about-us_splide_1`, {\n      type: \"loop\",\n      perPage: 1,\n      clones:1, \n      drag: true,\n      dragMinThreshold: {\n          mouse: 0,\n          touch: 10,\n      },\n      autoplay: false,\n      interval: 4000,\n      pauseOnHover: false,\n      pauseOnFocus: false,\n      cover: true,\n      heightRatio: .5,\n      gap: 20,\n      padding: { \n        right: \"15%\"\n      },\n      classes: {\n          pagination: 'splide__pagination_text',\n          page      : 'splide__pagination_text__pagination',\n      },\n  });\n\n  //lables capture from slides using data-descr\n  const splideLabels = Array.from(document.querySelector(`.${splide_1.className}`).querySelectorAll(\"[data-descr]\"))\n    .map(slide => slide.dataset.descr)\n\n  \n    //set lables as pagination buttons text\n  splideAboutUs_1.on( 'pagination:mounted', data => {\n  // `items` contains all dot items\n      data.items.forEach((item, index) => {\n          item.button.textContent = String( splideLabels[index] );\n      } );\n  } );\n\n\n  splideAboutUs_1.mount();\n\n    //move pagination between splide arrows, otherwise click areas overlap\n    document.querySelector(`.${splide_1.className}`).querySelector(\".splide__arrows\").firstElementChild\n    .after(document.querySelector(`.${splide_1.className}`).querySelector(\".splide__pagination_text\"))\n});"],"file":"about_us.js"}